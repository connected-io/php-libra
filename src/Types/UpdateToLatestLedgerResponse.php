<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: get_with_proof.proto

namespace Types;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Response from getting latest ledger
 *
 * Generated from protobuf message <code>types.UpdateToLatestLedgerResponse</code>
 */
class UpdateToLatestLedgerResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Responses to the queries posed by the requests. The proofs generated will
     * be relative to the version of the latest ledger provided below.
     *
     * Generated from protobuf field <code>repeated .types.ResponseItem response_items = 1;</code>
     */
    private $response_items;
    /**
     * The latest ledger info this node has. It will come with at least 2f+1
     * validator signatures as well as a proof that shows the latest ledger
     * extends the old ledger the client had.
     *
     * Generated from protobuf field <code>.types.LedgerInfoWithSignatures ledger_info_with_sigs = 2;</code>
     */
    private $ledger_info_with_sigs = null;
    /**
     * Validator change events from what the client last knew.  This is used to
     * inform the client of validator changes from the client's last known version
     * until the current version
     *
     * Generated from protobuf field <code>repeated .types.ValidatorChangeEventWithProof validator_change_events = 3;</code>
     */
    private $validator_change_events;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Types\ResponseItem[]|\Google\Protobuf\Internal\RepeatedField $response_items
     *           Responses to the queries posed by the requests. The proofs generated will
     *           be relative to the version of the latest ledger provided below.
     *     @type \Types\LedgerInfoWithSignatures $ledger_info_with_sigs
     *           The latest ledger info this node has. It will come with at least 2f+1
     *           validator signatures as well as a proof that shows the latest ledger
     *           extends the old ledger the client had.
     *     @type \Types\ValidatorChangeEventWithProof[]|\Google\Protobuf\Internal\RepeatedField $validator_change_events
     *           Validator change events from what the client last knew.  This is used to
     *           inform the client of validator changes from the client's last known version
     *           until the current version
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\GetWithProof::initOnce();
        parent::__construct($data);
    }

    /**
     * Responses to the queries posed by the requests. The proofs generated will
     * be relative to the version of the latest ledger provided below.
     *
     * Generated from protobuf field <code>repeated .types.ResponseItem response_items = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getResponseItems()
    {
        return $this->response_items;
    }

    /**
     * Responses to the queries posed by the requests. The proofs generated will
     * be relative to the version of the latest ledger provided below.
     *
     * Generated from protobuf field <code>repeated .types.ResponseItem response_items = 1;</code>
     * @param \Types\ResponseItem[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setResponseItems($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Types\ResponseItem::class);
        $this->response_items = $arr;

        return $this;
    }

    /**
     * The latest ledger info this node has. It will come with at least 2f+1
     * validator signatures as well as a proof that shows the latest ledger
     * extends the old ledger the client had.
     *
     * Generated from protobuf field <code>.types.LedgerInfoWithSignatures ledger_info_with_sigs = 2;</code>
     * @return \Types\LedgerInfoWithSignatures
     */
    public function getLedgerInfoWithSigs()
    {
        return $this->ledger_info_with_sigs;
    }

    /**
     * The latest ledger info this node has. It will come with at least 2f+1
     * validator signatures as well as a proof that shows the latest ledger
     * extends the old ledger the client had.
     *
     * Generated from protobuf field <code>.types.LedgerInfoWithSignatures ledger_info_with_sigs = 2;</code>
     * @param \Types\LedgerInfoWithSignatures $var
     * @return $this
     */
    public function setLedgerInfoWithSigs($var)
    {
        GPBUtil::checkMessage($var, \Types\LedgerInfoWithSignatures::class);
        $this->ledger_info_with_sigs = $var;

        return $this;
    }

    /**
     * Validator change events from what the client last knew.  This is used to
     * inform the client of validator changes from the client's last known version
     * until the current version
     *
     * Generated from protobuf field <code>repeated .types.ValidatorChangeEventWithProof validator_change_events = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getValidatorChangeEvents()
    {
        return $this->validator_change_events;
    }

    /**
     * Validator change events from what the client last knew.  This is used to
     * inform the client of validator changes from the client's last known version
     * until the current version
     *
     * Generated from protobuf field <code>repeated .types.ValidatorChangeEventWithProof validator_change_events = 3;</code>
     * @param \Types\ValidatorChangeEventWithProof[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setValidatorChangeEvents($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Types\ValidatorChangeEventWithProof::class);
        $this->validator_change_events = $arr;

        return $this;
    }

}

