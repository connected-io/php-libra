<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: vm_errors.proto

namespace Types;

use UnexpectedValueException;

/**
 * The status of a transaction as determined by the prologue.
 *
 * Protobuf type <code>types.VMValidationStatusCode</code>
 */
class VMValidationStatusCode
{
    /**
     * We don't want the default value to be valid
     *
     * Generated from protobuf enum <code>UnknownValidationStatus = 0;</code>
     */
    const UnknownValidationStatus = 0;
    /**
     * The transaction has a bad signature
     *
     * Generated from protobuf enum <code>InvalidSignature = 1;</code>
     */
    const InvalidSignature = 1;
    /**
     * Bad account authentication key
     *
     * Generated from protobuf enum <code>InvalidAuthKey = 2;</code>
     */
    const InvalidAuthKey = 2;
    /**
     * Sequence number is too old
     *
     * Generated from protobuf enum <code>SequenceNumberTooOld = 3;</code>
     */
    const SequenceNumberTooOld = 3;
    /**
     * Sequence number is too new
     *
     * Generated from protobuf enum <code>SequenceNumberTooNew = 4;</code>
     */
    const SequenceNumberTooNew = 4;
    /**
     * Insufficient balance to pay minimum transaction fee
     *
     * Generated from protobuf enum <code>InsufficientBalanceForTransactionFee = 5;</code>
     */
    const InsufficientBalanceForTransactionFee = 5;
    /**
     * The transaction has expired
     *
     * Generated from protobuf enum <code>TransactionExpired = 6;</code>
     */
    const TransactionExpired = 6;
    /**
     * The sending account does not exist
     *
     * Generated from protobuf enum <code>SendingAccountDoesNotExist = 7;</code>
     */
    const SendingAccountDoesNotExist = 7;
    /**
     * This write set transaction was rejected because it did not meet the
     * requirements for one.
     *
     * Generated from protobuf enum <code>RejectedWriteSet = 8;</code>
     */
    const RejectedWriteSet = 8;
    /**
     * This write set transaction cannot be applied to the current state.
     *
     * Generated from protobuf enum <code>InvalidWriteSet = 9;</code>
     */
    const InvalidWriteSet = 9;
    /**
     * Length of program field in raw transaction exceeded max length
     *
     * Generated from protobuf enum <code>ExceededMaxTransactionSize = 10;</code>
     */
    const ExceededMaxTransactionSize = 10;
    /**
     * This script is not on our whitelist of script.
     *
     * Generated from protobuf enum <code>UnknownScript = 11;</code>
     */
    const UnknownScript = 11;
    /**
     * Transaction is trying to publish a new module.
     *
     * Generated from protobuf enum <code>UnknownModule = 12;</code>
     */
    const UnknownModule = 12;
    /**
     * Max gas units submitted with transaction exceeds max gas units bound
     * in VM
     *
     * Generated from protobuf enum <code>MaxGasUnitsExceedsMaxGasUnitsBound = 13;</code>
     */
    const MaxGasUnitsExceedsMaxGasUnitsBound = 13;
    /**
     * Max gas units submitted with transaction not enough to cover the
     * intrinsic cost of the transaction.
     *
     * Generated from protobuf enum <code>MaxGasUnitsBelowMinTransactionGasUnits = 14;</code>
     */
    const MaxGasUnitsBelowMinTransactionGasUnits = 14;
    /**
     * Gas unit price submitted with transaction is below minimum gas price
     * set in the VM.
     *
     * Generated from protobuf enum <code>GasUnitPriceBelowMinBound = 15;</code>
     */
    const GasUnitPriceBelowMinBound = 15;
    /**
     * Gas unit price submitted with the transaction is above the maximum
     * gas price set in the VM.
     *
     * Generated from protobuf enum <code>GasUnitPriceAboveMaxBound = 16;</code>
     */
    const GasUnitPriceAboveMaxBound = 16;

    private static $valueToName = [
        self::UnknownValidationStatus => 'UnknownValidationStatus',
        self::InvalidSignature => 'InvalidSignature',
        self::InvalidAuthKey => 'InvalidAuthKey',
        self::SequenceNumberTooOld => 'SequenceNumberTooOld',
        self::SequenceNumberTooNew => 'SequenceNumberTooNew',
        self::InsufficientBalanceForTransactionFee => 'InsufficientBalanceForTransactionFee',
        self::TransactionExpired => 'TransactionExpired',
        self::SendingAccountDoesNotExist => 'SendingAccountDoesNotExist',
        self::RejectedWriteSet => 'RejectedWriteSet',
        self::InvalidWriteSet => 'InvalidWriteSet',
        self::ExceededMaxTransactionSize => 'ExceededMaxTransactionSize',
        self::UnknownScript => 'UnknownScript',
        self::UnknownModule => 'UnknownModule',
        self::MaxGasUnitsExceedsMaxGasUnitsBound => 'MaxGasUnitsExceedsMaxGasUnitsBound',
        self::MaxGasUnitsBelowMinTransactionGasUnits => 'MaxGasUnitsBelowMinTransactionGasUnits',
        self::GasUnitPriceBelowMinBound => 'GasUnitPriceBelowMinBound',
        self::GasUnitPriceAboveMaxBound => 'GasUnitPriceAboveMaxBound',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

