<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: validator_change.proto

namespace Types;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * This is used to prove validator changes.  When a validator is changing, it
 * triggers an event on /validator_change_account/events/sent.  To tell the
 * client about validator changes, we query
 * /validator_change_account/events/sent to get all versions that contain
 * validator changes after the version that we are trying to update from. For
 * each of these versions, the old validator set would have signed the ledger
 * info at that version.  The client needs this as well as the event results +
 * proof.  The client can then verify that these events were under the current
 * tree and that the changes were signed by the old validators (and that the
 * events correctly show which validators are the new validators).
 * This message represents a single validator change event and the proof that
 * corresponds to it
 *
 * Generated from protobuf message <code>types.ValidatorChangeEventWithProof</code>
 */
class ValidatorChangeEventWithProof extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.types.LedgerInfoWithSignatures ledger_info_with_sigs = 1;</code>
     */
    private $ledger_info_with_sigs = null;
    /**
     * Generated from protobuf field <code>.types.EventWithProof event_with_proof = 2;</code>
     */
    private $event_with_proof = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Types\LedgerInfoWithSignatures $ledger_info_with_sigs
     *     @type \Types\EventWithProof $event_with_proof
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ValidatorChange::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.types.LedgerInfoWithSignatures ledger_info_with_sigs = 1;</code>
     * @return \Types\LedgerInfoWithSignatures
     */
    public function getLedgerInfoWithSigs()
    {
        return $this->ledger_info_with_sigs;
    }

    /**
     * Generated from protobuf field <code>.types.LedgerInfoWithSignatures ledger_info_with_sigs = 1;</code>
     * @param \Types\LedgerInfoWithSignatures $var
     * @return $this
     */
    public function setLedgerInfoWithSigs($var)
    {
        GPBUtil::checkMessage($var, \Types\LedgerInfoWithSignatures::class);
        $this->ledger_info_with_sigs = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.types.EventWithProof event_with_proof = 2;</code>
     * @return \Types\EventWithProof
     */
    public function getEventWithProof()
    {
        return $this->event_with_proof;
    }

    /**
     * Generated from protobuf field <code>.types.EventWithProof event_with_proof = 2;</code>
     * @param \Types\EventWithProof $var
     * @return $this
     */
    public function setEventWithProof($var)
    {
        GPBUtil::checkMessage($var, \Types\EventWithProof::class);
        $this->event_with_proof = $var;

        return $this;
    }

}

