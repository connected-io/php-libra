<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transaction.proto

namespace Types\TransactionArgument;

use UnexpectedValueException;

/**
 * Protobuf type <code>types.TransactionArgument.ArgType</code>
 */
class ArgType
{
    /**
     * Generated from protobuf enum <code>U64 = 0;</code>
     */
    const U64 = 0;
    /**
     * Generated from protobuf enum <code>ADDRESS = 1;</code>
     */
    const ADDRESS = 1;
    /**
     * Generated from protobuf enum <code>STRING = 2;</code>
     */
    const STRING = 2;
    /**
     * Generated from protobuf enum <code>BYTEARRAY = 3;</code>
     */
    const BYTEARRAY = 3;

    private static $valueToName = [
        self::U64 => 'U64',
        self::ADDRESS => 'ADDRESS',
        self::STRING => 'STRING',
        self::BYTEARRAY => 'BYTEARRAY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ArgType::class, \Types\TransactionArgument_ArgType::class);

