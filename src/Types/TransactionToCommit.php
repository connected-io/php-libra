<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transaction.proto

namespace Types;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Transaction struct to commit to storage
 *
 * Generated from protobuf message <code>types.TransactionToCommit</code>
 */
class TransactionToCommit extends \Google\Protobuf\Internal\Message
{
    /**
     * The signed transaction which was executed
     *
     * Generated from protobuf field <code>.types.SignedTransaction signed_txn = 1;</code>
     */
    private $signed_txn = null;
    /**
     * State db updates
     *
     * Generated from protobuf field <code>repeated .types.AccountState account_states = 2;</code>
     */
    private $account_states;
    /**
     * Events yielded by the transaction.
     *
     * Generated from protobuf field <code>repeated .types.Event events = 3;</code>
     */
    private $events;
    /**
     * The amount of gas used.
     *
     * Generated from protobuf field <code>uint64 gas_used = 4;</code>
     */
    private $gas_used = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Types\SignedTransaction $signed_txn
     *           The signed transaction which was executed
     *     @type \Types\AccountState[]|\Google\Protobuf\Internal\RepeatedField $account_states
     *           State db updates
     *     @type \Types\Event[]|\Google\Protobuf\Internal\RepeatedField $events
     *           Events yielded by the transaction.
     *     @type int|string $gas_used
     *           The amount of gas used.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Transaction::initOnce();
        parent::__construct($data);
    }

    /**
     * The signed transaction which was executed
     *
     * Generated from protobuf field <code>.types.SignedTransaction signed_txn = 1;</code>
     * @return \Types\SignedTransaction
     */
    public function getSignedTxn()
    {
        return $this->signed_txn;
    }

    /**
     * The signed transaction which was executed
     *
     * Generated from protobuf field <code>.types.SignedTransaction signed_txn = 1;</code>
     * @param \Types\SignedTransaction $var
     * @return $this
     */
    public function setSignedTxn($var)
    {
        GPBUtil::checkMessage($var, \Types\SignedTransaction::class);
        $this->signed_txn = $var;

        return $this;
    }

    /**
     * State db updates
     *
     * Generated from protobuf field <code>repeated .types.AccountState account_states = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAccountStates()
    {
        return $this->account_states;
    }

    /**
     * State db updates
     *
     * Generated from protobuf field <code>repeated .types.AccountState account_states = 2;</code>
     * @param \Types\AccountState[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAccountStates($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Types\AccountState::class);
        $this->account_states = $arr;

        return $this;
    }

    /**
     * Events yielded by the transaction.
     *
     * Generated from protobuf field <code>repeated .types.Event events = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getEvents()
    {
        return $this->events;
    }

    /**
     * Events yielded by the transaction.
     *
     * Generated from protobuf field <code>repeated .types.Event events = 3;</code>
     * @param \Types\Event[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setEvents($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Types\Event::class);
        $this->events = $arr;

        return $this;
    }

    /**
     * The amount of gas used.
     *
     * Generated from protobuf field <code>uint64 gas_used = 4;</code>
     * @return int|string
     */
    public function getGasUsed()
    {
        return $this->gas_used;
    }

    /**
     * The amount of gas used.
     *
     * Generated from protobuf field <code>uint64 gas_used = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setGasUsed($var)
    {
        GPBUtil::checkUint64($var);
        $this->gas_used = $var;

        return $this;
    }

}

