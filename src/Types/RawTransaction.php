<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transaction.proto

namespace Types;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A generic structure that describes a transaction that a client submits
 *
 * Generated from protobuf message <code>types.RawTransaction</code>
 */
class RawTransaction extends \Google\Protobuf\Internal\Message
{
    /**
     * Sender's account address
     *
     * Generated from protobuf field <code>bytes sender_account = 1;</code>
     */
    private $sender_account = '';
    /**
     * Sequence number of this transaction corresponding to sender's account.
     *
     * Generated from protobuf field <code>uint64 sequence_number = 2;</code>
     */
    private $sequence_number = 0;
    /**
     * Maximal total gas specified by wallet to spend for this transaction.
     *
     * Generated from protobuf field <code>uint64 max_gas_amount = 5;</code>
     */
    private $max_gas_amount = 0;
    /**
     * The price to be paid for each unit of gas.
     *
     * Generated from protobuf field <code>uint64 gas_unit_price = 6;</code>
     */
    private $gas_unit_price = 0;
    /**
     * Expiration time for this transaction.  If storage is queried and
     * the time returned is greater than or equal to this time and this
     * transaction has not been included, you can be certain that it will
     * never be included.
     * If set to 0, there will be no expiration time
     *
     * Generated from protobuf field <code>uint64 expiration_time = 7;</code>
     */
    private $expiration_time = 0;
    protected $payload;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $sender_account
     *           Sender's account address
     *     @type int|string $sequence_number
     *           Sequence number of this transaction corresponding to sender's account.
     *     @type \Types\Program $program
     *           The transaction script to execute.
     *     @type \Types\WriteSet $write_set
     *           A write set, used for genesis blocks and other magic transactions.
     *           This bypasses the rules for regular transactions so will typically be
     *           rejected. Only under special circumstances will it be accepted.
     *     @type int|string $max_gas_amount
     *           Maximal total gas specified by wallet to spend for this transaction.
     *     @type int|string $gas_unit_price
     *           The price to be paid for each unit of gas.
     *     @type int|string $expiration_time
     *           Expiration time for this transaction.  If storage is queried and
     *           the time returned is greater than or equal to this time and this
     *           transaction has not been included, you can be certain that it will
     *           never be included.
     *           If set to 0, there will be no expiration time
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Transaction::initOnce();
        parent::__construct($data);
    }

    /**
     * Sender's account address
     *
     * Generated from protobuf field <code>bytes sender_account = 1;</code>
     * @return string
     */
    public function getSenderAccount()
    {
        return $this->sender_account;
    }

    /**
     * Sender's account address
     *
     * Generated from protobuf field <code>bytes sender_account = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSenderAccount($var)
    {
        GPBUtil::checkString($var, False);
        $this->sender_account = $var;

        return $this;
    }

    /**
     * Sequence number of this transaction corresponding to sender's account.
     *
     * Generated from protobuf field <code>uint64 sequence_number = 2;</code>
     * @return int|string
     */
    public function getSequenceNumber()
    {
        return $this->sequence_number;
    }

    /**
     * Sequence number of this transaction corresponding to sender's account.
     *
     * Generated from protobuf field <code>uint64 sequence_number = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSequenceNumber($var)
    {
        GPBUtil::checkUint64($var);
        $this->sequence_number = $var;

        return $this;
    }

    /**
     * The transaction script to execute.
     *
     * Generated from protobuf field <code>.types.Program program = 3;</code>
     * @return \Types\Program
     */
    public function getProgram()
    {
        return $this->readOneof(3);
    }

    /**
     * The transaction script to execute.
     *
     * Generated from protobuf field <code>.types.Program program = 3;</code>
     * @param \Types\Program $var
     * @return $this
     */
    public function setProgram($var)
    {
        GPBUtil::checkMessage($var, \Types\Program::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * A write set, used for genesis blocks and other magic transactions.
     * This bypasses the rules for regular transactions so will typically be
     * rejected. Only under special circumstances will it be accepted.
     *
     * Generated from protobuf field <code>.types.WriteSet write_set = 4;</code>
     * @return \Types\WriteSet
     */
    public function getWriteSet()
    {
        return $this->readOneof(4);
    }

    /**
     * A write set, used for genesis blocks and other magic transactions.
     * This bypasses the rules for regular transactions so will typically be
     * rejected. Only under special circumstances will it be accepted.
     *
     * Generated from protobuf field <code>.types.WriteSet write_set = 4;</code>
     * @param \Types\WriteSet $var
     * @return $this
     */
    public function setWriteSet($var)
    {
        GPBUtil::checkMessage($var, \Types\WriteSet::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Maximal total gas specified by wallet to spend for this transaction.
     *
     * Generated from protobuf field <code>uint64 max_gas_amount = 5;</code>
     * @return int|string
     */
    public function getMaxGasAmount()
    {
        return $this->max_gas_amount;
    }

    /**
     * Maximal total gas specified by wallet to spend for this transaction.
     *
     * Generated from protobuf field <code>uint64 max_gas_amount = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxGasAmount($var)
    {
        GPBUtil::checkUint64($var);
        $this->max_gas_amount = $var;

        return $this;
    }

    /**
     * The price to be paid for each unit of gas.
     *
     * Generated from protobuf field <code>uint64 gas_unit_price = 6;</code>
     * @return int|string
     */
    public function getGasUnitPrice()
    {
        return $this->gas_unit_price;
    }

    /**
     * The price to be paid for each unit of gas.
     *
     * Generated from protobuf field <code>uint64 gas_unit_price = 6;</code>
     * @param int|string $var
     * @return $this
     */
    public function setGasUnitPrice($var)
    {
        GPBUtil::checkUint64($var);
        $this->gas_unit_price = $var;

        return $this;
    }

    /**
     * Expiration time for this transaction.  If storage is queried and
     * the time returned is greater than or equal to this time and this
     * transaction has not been included, you can be certain that it will
     * never be included.
     * If set to 0, there will be no expiration time
     *
     * Generated from protobuf field <code>uint64 expiration_time = 7;</code>
     * @return int|string
     */
    public function getExpirationTime()
    {
        return $this->expiration_time;
    }

    /**
     * Expiration time for this transaction.  If storage is queried and
     * the time returned is greater than or equal to this time and this
     * transaction has not been included, you can be certain that it will
     * never be included.
     * If set to 0, there will be no expiration time
     *
     * Generated from protobuf field <code>uint64 expiration_time = 7;</code>
     * @param int|string $var
     * @return $this
     */
    public function setExpirationTime($var)
    {
        GPBUtil::checkUint64($var);
        $this->expiration_time = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getPayload()
    {
        return $this->whichOneof("payload");
    }

}

