<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: get_with_proof.proto

namespace Types;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * -----------------------------------------------------------------------------
 * ---------------- Get single transaction by account + sequence number
 * -----------------------------------------------------------------------------
 * Get transactions that altered an account - this includes both sent and
 * received. A user of this should check that the data returned matches what
 * they expect.  As an example, a potential attack vector would be something
 * like the following: Alice is buying an apple from Bob. Alice's phone signs a
 * transaction X with sequence number N that pays coins to Bob. Alice transmits
 * this signature to Bob's payment terminal which then submits the transaction
 * and checks its status to see if Alice can be given the apple. However, as Bob
 * is doing this Alice constructs a second transaction X' also with sequence
 * number N. Alice gets that transaction inserted in the blockchain. If Bob
 * isn't thoughtful about how he uses this API he may assume that if he asks for
 * the N'th transaction on Alice's account that when the API returns that this
 * means the transaction has gone through. The point here is that one should be
 * careful in reading too much into "transaction X is on the chain" and focus on
 * the logs, which tell you what the transaction did.
 * If a client submitted a transaction, they should also verify that the hash of
 * the returned transaction matches what they submitted.  As an example, if a
 * client has two wallets that share the same account, they may both submit a
 * transaction at the same sequence number and only one will be committed.  A
 * client should never assume that if they receive the response that this
 * transaction was included that it means that this is definitely the
 * transaction that was submitted.  They should check that the hash matches what
 * they sent
 *
 * Generated from protobuf message <code>types.GetAccountTransactionBySequenceNumberRequest</code>
 */
class GetAccountTransactionBySequenceNumberRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Account for which to query transactions
     *
     * Generated from protobuf field <code>bytes account = 1;</code>
     */
    private $account = '';
    /**
     * Generated from protobuf field <code>uint64 sequence_number = 2;</code>
     */
    private $sequence_number = 0;
    /**
     * Set to true to fetch events for the transaction at this version
     *
     * Generated from protobuf field <code>bool fetch_events = 3;</code>
     */
    private $fetch_events = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $account
     *           Account for which to query transactions
     *     @type int|string $sequence_number
     *     @type bool $fetch_events
     *           Set to true to fetch events for the transaction at this version
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\GetWithProof::initOnce();
        parent::__construct($data);
    }

    /**
     * Account for which to query transactions
     *
     * Generated from protobuf field <code>bytes account = 1;</code>
     * @return string
     */
    public function getAccount()
    {
        return $this->account;
    }

    /**
     * Account for which to query transactions
     *
     * Generated from protobuf field <code>bytes account = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setAccount($var)
    {
        GPBUtil::checkString($var, False);
        $this->account = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint64 sequence_number = 2;</code>
     * @return int|string
     */
    public function getSequenceNumber()
    {
        return $this->sequence_number;
    }

    /**
     * Generated from protobuf field <code>uint64 sequence_number = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSequenceNumber($var)
    {
        GPBUtil::checkUint64($var);
        $this->sequence_number = $var;

        return $this;
    }

    /**
     * Set to true to fetch events for the transaction at this version
     *
     * Generated from protobuf field <code>bool fetch_events = 3;</code>
     * @return bool
     */
    public function getFetchEvents()
    {
        return $this->fetch_events;
    }

    /**
     * Set to true to fetch events for the transaction at this version
     *
     * Generated from protobuf field <code>bool fetch_events = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setFetchEvents($var)
    {
        GPBUtil::checkBool($var);
        $this->fetch_events = $var;

        return $this;
    }

}

