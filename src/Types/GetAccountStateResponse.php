<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: get_with_proof.proto

namespace Types;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * State information returned by a get account state query.
 *
 * Generated from protobuf message <code>types.GetAccountStateResponse</code>
 */
class GetAccountStateResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Blob value representing the account state together with proof the client
     * can utilize to verify it.
     *
     * Generated from protobuf field <code>.types.AccountStateWithProof account_state_with_proof = 1;</code>
     */
    private $account_state_with_proof = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Types\AccountStateWithProof $account_state_with_proof
     *           Blob value representing the account state together with proof the client
     *           can utilize to verify it.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\GetWithProof::initOnce();
        parent::__construct($data);
    }

    /**
     * Blob value representing the account state together with proof the client
     * can utilize to verify it.
     *
     * Generated from protobuf field <code>.types.AccountStateWithProof account_state_with_proof = 1;</code>
     * @return \Types\AccountStateWithProof
     */
    public function getAccountStateWithProof()
    {
        return $this->account_state_with_proof;
    }

    /**
     * Blob value representing the account state together with proof the client
     * can utilize to verify it.
     *
     * Generated from protobuf field <code>.types.AccountStateWithProof account_state_with_proof = 1;</code>
     * @param \Types\AccountStateWithProof $var
     * @return $this
     */
    public function setAccountStateWithProof($var)
    {
        GPBUtil::checkMessage($var, \Types\AccountStateWithProof::class);
        $this->account_state_with_proof = $var;

        return $this;
    }

}

